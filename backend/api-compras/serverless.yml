org: kartago
service: compras-api-stepfunctions

useDotenv: true

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  stage: ${opt:stage, 'dev'}
  timeout: 10
  memorySize: 1024
  iam:
    role: arn:aws:iam::501635705879:role/LabRole
  environment:
    COMPRAS_TABLE: compras-${self:provider.stage}
    PRODUCTOS_TABLE: productos-${self:provider.stage}
    JWT_SECRET: ${env:JWT_SECRET}

functions:
  registrarCompra:
    handler: handler.registrarCompra
    events:
      - http:
          path: /compras
          method: post
          cors: true

  listarCompras:
    handler: handler.listarCompras
    events:
      - http:
          path: /compras
          method: get
          cors: true

  obtenerCompra:
    handler: handler.obtenerCompra
    events:
      - http:
          path: /compras/{compra_id}
          method: get
          cors: true

  listarComprasPendientes:
    handler: handler.listarComprasPendientes
    events:
      - http:
          path: /compras/pendientes-aprobacion
          method: get
          cors: true

  cancelarCompra:
    handler: handler.cancelarCompra
    events:
      - http:
          path: /compras/{compra_id}/cancel
          method: put
          cors: true

resources:
  Resources:
    ComprasTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: compras-${self:provider.stage}
        AttributeDefinitions:
          - AttributeName: tenant_id
            AttributeType: S
          - AttributeName: compra_id
            AttributeType: S
          - AttributeName: user_id
            AttributeType: S
        KeySchema:
          - AttributeName: tenant_id
            KeyType: HASH
          - AttributeName: compra_id
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
        GlobalSecondaryIndexes:
          - IndexName: user-index
            KeySchema:
              - AttributeName: tenant_id
                KeyType: HASH
              - AttributeName: user_id
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES

plugins:
  - serverless-dotenv-plugin
